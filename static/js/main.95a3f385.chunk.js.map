{"version":3,"sources":["App.js","reportWebVitals.js","index.js","Screens/index.js"],"names":["App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","Index","useState","display","setdisplay","history","sethistory","clear","setclear","values","setvalues","indice","setindice","operation","setoperation","_numberDig","n","includes","newValueDisplay","newValues","parseFloat","_reset","_operation","operation_Click","equal","eval","error","console","log","className","onClick","e"],"mappings":"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","file":"static/js/main.95a3f385.chunk.js","sourcesContent":["import Index from './Screens/index.js'\nimport 'bulma/css/bulma.min.css';\nimport './App.css'\n\n// import './Styles'\n\nfunction App() {\n  return (\n    <Index />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","//imports\nimport react, { useState } from 'react';\nimport './../Styles/index.css'\n\n//função main\nconst Index = () => {\n\n    const [display, setdisplay] = useState('0');\n    const [history, sethistory] = useState('')\n    const [clear, setclear] = useState(false);\n    const [values, setvalues] = useState([0,0]);\n    const [indice, setindice] = useState(0);\n    const [operation, setoperation] = useState(null);\n    //git\n\n    const _numberDig = (n) =>{\n        //validar o ponto\n        if(n === ',' && display.includes(','))return;\n        //validar 0 a esquerda\n        const valuecurrent = display === \"0\" || clear ? '' : display;\n\n        const newValueDisplay = valuecurrent + n;\n        const newValues = [...values];\n\n        if(n !== '.') newValues[indice] = parseFloat(newValueDisplay)\n        setdisplay(newValueDisplay);\n        setclear(false);\n        setvalues(newValues);\n\n    }\n    const _reset = () =>{\n        setdisplay('0');\n        sethistory('')\n        setclear(false);\n        setvalues([0, 0]);\n        setindice(0);\n        setoperation(null);\n    }\n    const _operation = (operation_Click) =>{\n        if(values[0] === 0)return;\n        \n        if (indice === 0) {\n\n            setindice(1)\n            setoperation(operation_Click)\n            setclear(true)\n\n        }else{\n            const equal = operation_Click === '=';\n            const newValues = [...values];\n            try{\n                if(operation_Click === 'signal'){\n                    newValues[0] = newValues[0] * (-1);\n                }else{\n                    newValues[0] = eval(`${newValues[0]} ${operation} ${newValues[1]}`);\n                }\n               \n            }catch(error){newValues[0] = values[0]}\n\n            console.log(newValues[0])\n            newValues[1]=0;\n\n            setdisplay(newValues[0]);\n            setclear(!equal);\n            setoperation(equal ? null : operation_Click);\n            setvalues(newValues);\n            setindice(equal ? 0 : 1);\n\n           \n        }\n\n        \n        \n\n    }\n\n    return(\n        <nav className=\"container\">\n            <div className=\"Calc_box_container\">\n                <div className=\"container visor ml-5\">\n                    <h2 className=\"is-size-4 history pr-6 pt-6 mt-5 font_robotoRegular\">{history}</h2>\n                    <h1 className=\"is-size-1 result pr-6 pb-6  font_robotoBold\">{display}</h1>\n                </div>\n                <div className=\"container buttonsView mx-3\">\n                    <div className=\"buttonColunsTree\">\n                        <button className=\"buttonBig buntonBackWhite font_robotoRegular m-3\" onClick={e => {_reset()}}>AC</button>\n                        <button className=\"buttonCalc font_robotoRegular buttonColorPurple m-3\" onClick={e => {_operation('signal')}}>+/-</button>\n                        <button className=\"buttonCalc font_robotoRegular buttonColorPurple m-3\" onClick={e => {_operation('/')}}>÷</button>\n                    </div>\n                    <div className=\"buttonColuns\">\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(8)}} >8</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(7)}}>7</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(9)}}>9</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3 buttonColorPurple\" onClick={e => {_operation('*')}}>×</button>\n                    </div>\n                    \n                    <div className=\"buttonColuns\">\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(4)}}>4</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(5)}}>5</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(6)}}>6</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3 buttonColorPurple\" onClick={e => {_operation('-')}}>-</button>\n                    </div>\n                    <div className=\"buttonColuns\">\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(1)}}>1</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(2)}}>2</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(3)}}>3</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3 buttonColorPurple\" onClick={e => {_operation('+')}}>+</button>\n                    </div>\n                    <div className=\"buttonColunsTree\">\n                        <button className=\"buttonCalc font_robotoRegular m-3\" onClick={e => {_numberDig(0)}}>0</button>\n                        <button className=\"buttonCalc font_robotoRegular m-3 buttonColorPurple\"  onClick={e => {_numberDig(',')}}>,</button>\n                        <button className=\"buttonBig buntonBackPurple font_robotoRegular buttonColorWhite\" onClick={e => {_operation('=')}}>=</button>\n                    </div>\n                    \n                    \n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Index;\n"],"sourceRoot":""}